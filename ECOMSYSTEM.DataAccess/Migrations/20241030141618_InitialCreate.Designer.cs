// <auto-generated />
using System;
using ECOMSYSTEM.DataAccess.EntityModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECOMSYSTEM.DataAccess.Migrations
{
    [DbContext(typeof(ECOM_WebContext))]
    [Migration("20241030141618_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblItemCart", b =>
                {
                    b.Property<long>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ItemId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInCart")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ItemName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("ItemPrice")
                        .HasColumnType("float");

                    b.Property<int?>("ItemQty")
                        .HasColumnType("int")
                        .HasColumnName("ItemQTY");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ItemId")
                        .HasName("PK__tmp_ms_x__727E838B36C57308");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("TblItemCart", (string)null);
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblOrder", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOrderAccept")
                        .HasColumnType("bit");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("OderValue")
                        .HasColumnType("float");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId")
                        .HasName("PK__TblOrder__C3905BCF4ABEA67D");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("TblOrder", (string)null);
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblProduct", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ProductSubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId")
                        .HasName("PK__tmp_ms_x__B40CC6CD8808E9F9");

                    b.ToTable("TblProducts");
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblQuotation", b =>
                {
                    b.Property<long>("QuotationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("QuotationId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<double>("QuotationAmount")
                        .HasColumnType("float");

                    b.Property<string>("QuotationStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("QuotationId")
                        .HasName("PK__TblQuota__2B1397A1D476A42B");

                    b.HasIndex("OrderId");

                    b.HasIndex("SupplierId");

                    b.ToTable("TblQuotation", (string)null);
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblUserRegistration", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__TblUserR__1788CC4CA80DDAD3");

                    b.ToTable("TblUserRegistration", (string)null);
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblItemCart", b =>
                {
                    b.HasOne("ECOMSYSTEM.DataAccess.EntityModel.TblProduct", "Product")
                        .WithMany("TblItemCarts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__TblItemCa__Produ__5CD6CB2B");

                    b.HasOne("ECOMSYSTEM.DataAccess.EntityModel.TblUserRegistration", "User")
                        .WithMany("TblItemCarts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TblItemCa__UserI__4AB81AF0");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblOrder", b =>
                {
                    b.HasOne("ECOMSYSTEM.DataAccess.EntityModel.TblItemCart", "Item")
                        .WithMany("TblOrders")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__TblOrder__ItemId__4D94879B");

                    b.HasOne("ECOMSYSTEM.DataAccess.EntityModel.TblUserRegistration", "User")
                        .WithMany("TblOrders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TblOrder__UserId__4E88ABD4");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblQuotation", b =>
                {
                    b.HasOne("ECOMSYSTEM.DataAccess.EntityModel.TblOrder", "Order")
                        .WithMany("TblQuotations")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__TblQuota__OrderI__5CD6CB2B");

                    b.HasOne("ECOMSYSTEM.DataAccess.EntityModel.TblUserRegistration", "Supplier")
                        .WithMany("TblQuotationsAsSupplier")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("FK__TblQuota__Suppli__4AB81AF0");

                    b.Navigation("Order");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblItemCart", b =>
                {
                    b.Navigation("TblOrders");
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblOrder", b =>
                {
                    b.Navigation("TblQuotations");
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblProduct", b =>
                {
                    b.Navigation("TblItemCarts");
                });

            modelBuilder.Entity("ECOMSYSTEM.DataAccess.EntityModel.TblUserRegistration", b =>
                {
                    b.Navigation("TblItemCarts");

                    b.Navigation("TblOrders");

                    b.Navigation("TblQuotationsAsSupplier");
                });
#pragma warning restore 612, 618
        }
    }
}
